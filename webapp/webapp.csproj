<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp3.1</TargetFramework>
    <WwwRoot>wwwroot\</WwwRoot>
  </PropertyGroup>

  <ItemGroup>
    <PackageReference Include="jsreport.AspNetCore" Version="2.0.2" />
    <PackageReference Include="Microsoft.AspNetCore.NodeServices" Version="3.1.1" />
  </ItemGroup>

  <Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(WwwRoot)node_modules') ">
      <!-- Ensure Node.js is installed -->
      <Exec Command="node --version" ContinueOnError="true">
        <Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
      </Exec>
      <Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
      <Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
      <!-- <Exec WorkingDirectory="$(WwwRoot)" Command="npm install" /> -->
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm install jsreport-core --save" />
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm install jsreport-jsrender --save" />
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm install jsreport-phantom-pdf --save" />
    </Target>

    <Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
      <!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
      <!-- <Exec WorkingDirectory="$(WwwRoot)" Command="npm install" />
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm run build" /> -->
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm install jsreport-core --save" />
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm install jsreport-jsrender --save" />
      <Exec WorkingDirectory="$(WwwRoot)" Command="npm install jsreport-phantom-pdf --save" />

      <!-- Include the newly-built files in the publish output -->
      <ItemGroup>
        <DistFiles Include="$(WwwRoot)build\**" />
        <ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
          <RelativePath>%(DistFiles.Identity)</RelativePath>
          <CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
          <ExcludeFromSingleFile>true</ExcludeFromSingleFile>
        </ResolvedFileToPublish>
      </ItemGroup>
    </Target>


</Project>
